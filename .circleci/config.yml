aliases:
  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages

version: 2
jobs:
  build:
    docker:
      - image: ubuntu:bionic
    resource_class: xlarge
    steps:
      - run: apt-get update
      - run: apt-get install -y ca-certificates git
      - checkout
      - run: apt-get install -y doxygen $(cat logdevice/build_tools/ubuntu.deps)
      - run: git reset --hard HEAD
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - run:
          name: Build LogDevice
          command: |
            mkdir -p _build/staging/usr/local
            python3 -m pip install virtualenv
            python3 -m virtualenv _build/staging/usr/local
            source _build/staging/usr/local/bin/activate
            python3 -m pip install --upgrade setuptools wheel cython==0.28.6
            cd _build
            cmake -Dthriftpy3=ON ../logdevice/
            make -j 5
      - run:
          name: Generate Documentation
          working_directory: _build
          command: |
            make -j 8 docs
      - persist_to_workspace:
          root: .
          paths:
            - website
            - docs
            - _build
  deploy-website:
    docker:
      - image: circleci/node:8.12.0  # Use LTS version of Node.js
    resource_class: large
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Deploy LogDevice website
          working_directory: /tmp/workspace
          command: |
            # Configure Docusaurus Bot
            git config --global user.email "docusaurus-bot@users.noreply.github.com"
            git config --global user.name "Docusaurus Bot"
            echo "machine github.com login docusaurus-bot password $GITHUB_TOKEN" > ~/.netrc
            # Install Docusaurus and publish the website
            cd website && yarn install && GIT_USER=docusaurus-bot yarn publish-gh-pages
  unittests:
    docker:
      - image: ubuntu:bionic
    resource_class: xlarge
    steps:
      - run: apt-get update
      - run: apt-get install -y ca-certificates doxygen git xsltproc $(cat logdevice/build_tools/ubuntu.deps)
      - checkout
      - run: git reset --hard HEAD
      - attach_workspace:
          at: .
      - run:
          name: Unit Tests
          working_directory: _build
          command: |
            mkdir -p ../gtest_results/unit_tests
            make ARGS="-j 8 --output-on-failure --no-compress-output -T Test" test
      - run:
          name: Collect results
          working_directory: _build
          command: |
            xsltproc ../.circleci/conv.xsl Testing/*/Test.xml > ../gtest_results/unit_tests/results.xml
          when: always
      - store_artifacts:
          path: gtest_results
          when: always
      - store_test_results:
          path: gtest_results
          when: always
  dockerimage:
    docker:
      - image: ubuntu:bionic
    resource_class: xlarge
    steps:
      - run: apt-get update
      - run: apt-get install -y ca-certificates git docker.io
      - checkout
      - run: git reset --hard HEAD
      - run: git submodule sync
      - run: git submodule update --init --recursive
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Assemble Docker Image (Ubuntu)
          command: |
            docker build -t facebookincubator/logdevice:latest --build-arg PARALLEL=5 -f docker/Dockerfile.ubuntu .
      - run:
          name: Push Image to DockerHub
          command: |
            if [ -n "$DOCKER_PWD" ]; then
              if [ "$CIRCLE_BRANCH" == "master" ]; then
                DOCKER_TAG=latest;
              elif [ -n "$CIRCLE_TAG" ]; then
                DOCKER_TAG=$CIRCLE_TAG;
              else
                DOCKER_TAG=$CIRCLE_BRANCH;
              fi
              echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
              docker push facebookincubator/logdevice:$DOCKER_TAG
            fi
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters: *filter-ignore-gh-pages
      - unittests:
          filters: *filter-ignore-gh-pages
          requires:
            - build
      - dockerimage:
          filters:
            branches:
              only: master
            tags:
              only: /.*/
          requires:
            - build
      - deploy-website:
          filters:
            branches:
              only: master
          requires:
            - build
